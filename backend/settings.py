"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 3.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

import dj_database_url
from configurations import Configuration, values
from django.conf.locale.it import formats as it_formats

# overwrite l10N date format
# https://blog.mounirmesselmeni.de/2014/11/06/date-format-in-django-admin/
it_formats.DATE_FORMAT = "d/m/Y"


class ProjectDefault(Configuration):
    """
    The default settings from the Django project template.

    Django Configurations
    https://django-configurations.readthedocs.io
    """

    # Build paths inside the project like this: os.path.join(BASE_DIR, ...)
    BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

    # Quick-start development settings - unsuitable for production
    # See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

    # SECURITY WARNING: keep the secret key used in production secret!
    SECRET_KEY = values.SecretValue()

    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = values.BooleanValue(True)

    ALLOWED_HOSTS = values.ListValue([])

    # Application definition

    INSTALLED_APPS = [
        "django.contrib.admin",
        "django.contrib.auth",
        "django.contrib.contenttypes",
        "django.contrib.sessions",
        "django.contrib.messages",
        "django.contrib.staticfiles",
        "jjodel.jjodel",
    ]
    MIDDLEWARE = [
        "django.middleware.security.SecurityMiddleware",
        "django.contrib.sessions.middleware.SessionMiddleware",
        "django.middleware.common.CommonMiddleware",
        "django.middleware.csrf.CsrfViewMiddleware",
        "django.contrib.auth.middleware.AuthenticationMiddleware",
        "django.contrib.messages.middleware.MessageMiddleware",
        "django.middleware.clickjacking.XFrameOptionsMiddleware",
    ]

    ROOT_URLCONF = "backend.urls"

    TEMPLATES = [
        {
            "BACKEND": "django.template.backends.django.DjangoTemplates",
            "DIRS": [],
            "APP_DIRS": True,
            "OPTIONS": {
                "context_processors": [
                    "django.template.context_processors.debug",
                    "django.template.context_processors.request",
                    "django.contrib.auth.context_processors.auth",
                    "django.contrib.messages.context_processors.messages",
                ],
            },
        }
    ]

    WSGI_APPLICATION = "backend.wsgi.application"

    # Database
    # https://docs.djangoproject.com/en/3.0/ref/settings/#databases

    DATABASES = {
        "default": dj_database_url.config(env="DJANGO_DATABASE_URL"),
    }
    # Database routers
    # https://docs.djangoproject.com/en/3.0/ref/settings/#database-routers

    # Password validation
    # https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators  # noqa
    # fmt: off
    AUTH_PASSWORD_VALIDATORS = [
        {
            "NAME":
            "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
            # noqa
        },
        {
            "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
        },
        {
            "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
        },
        {
            "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
        },
    ]

    # fmt: on
    # Internationalization
    # https://docs.djangoproject.com/en/3.0/topics/i18n/

    LANGUAGE_CODE = "it"

    TIME_ZONE = "Europe/Rome"

    USE_I18N = True

    USE_L10N = False

    USE_TZ = True

    # Date format
    # https://docs.djangoproject.com/en/3.0/ref/settings/#date-format

    DATETIME_FORMAT = "d/m/Y H:i:s"
    DATE_FORMAT = "d/m/Y"
    SHORT_DATE_FORMAT = "d/m/Y"

    USE_THOUSAND_SEPARATOR = True

    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/3.0/howto/static-files/

    STATIC_URL = "static/"

    STATIC_ROOT = os.path.abspath(os.path.join(BASE_DIR, "static"))

    STATICFILES_STORAGE = (
        "django.contrib.staticfiles.storage.ManifestStaticFilesStorage"
    )

    # Stored files
    # https://docs.djangoproject.com/en/3.0/topics/files/

    MEDIA_URL = "media/"

    MEDIA_ROOT = os.path.abspath(os.path.join(BASE_DIR, "media"))

    # Email Settings
    # https://docs.djangoproject.com/en/3.0/topics/email/

    ADMINS = values.SingleNestedTupleValue((("backend", "errors@backend.com"),))

    DEFAULT_FROM_EMAIL = "backend <info@backend.com>"

    EMAIL_SUBJECT_PREFIX = "[backend] "

    EMAIL_USE_LOCALTIME = True

    SERVER_EMAIL = values.EmailValue("server@backend.com")

    # Email URL
    # https://django-configurations.readthedocs.io/en/stable/values/

    EMAIL = values.EmailURLValue("console://")

    # Translation
    # https://docs.djangoproject.com/en/3.0/topics/i18n/translation/

    # LANGUAGES = (("en", "English"), ("it", "Italiano"))

    # LOCALE_PATHS = (os.path.abspath(os.path.join(BASE_DIR, "locale")),)

    X_FRAME_OPTIONS = "SAMEORIGIN"  # Default: 'SAMEORIGIN'

    # Force script name
    # https://docs.djangoproject.com/en/3.1/ref/settings/#force-script-name

    FORCE_SCRIPT_NAME = values.Value(default=None)


class Local(ProjectDefault):
    """The local settings."""

    # Application definition

    INSTALLED_APPS = ProjectDefault.INSTALLED_APPS.copy()

    MIDDLEWARE = ProjectDefault.MIDDLEWARE.copy()

    # Django Debug Toolbar
    # https://django-debug-toolbar.readthedocs.io/en/stable/configuration.html

    try:
        import debug_toolbar  # noqa
    except ModuleNotFoundError:  # pragma: no cover
        pass
    else:  # pragma: no cover
        INTERNAL_IPS = values.ListValue([], environ_name="ALLOWED_HOSTS")
        INSTALLED_APPS.append("debug_toolbar")
        MIDDLEWARE.append("debug_toolbar.middleware.DebugToolbarMiddleware")
        DEBUG_TOOLBAR_CONFIG = {"SHOW_TOOLBAR_CALLBACK": lambda x: True}


class Alpha(ProjectDefault):
    """The alpha settings."""

    # Debug
    # https://docs.djangoproject.com/en/3.0/ref/settings/#debug

    DEBUG = True


class Beta(ProjectDefault):
    """The beta settings."""

    # Debug
    # https://docs.djangoproject.com/en/3.0/ref/settings/#debug

    DEBUG = False


class Production(ProjectDefault):
    """The production settings."""

    # Debug
    # https://docs.djangoproject.com/en/3.0/ref/settings/#debug

    DEBUG = False

    # Email URL
    # https://django-configurations.readthedocs.io/en/stable/values/

    EMAIL = values.EmailURLValue()

    # Deployment
    # https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

    SECURE_BROWSER_XSS_FILTER = True

    SECURE_CONTENT_TYPE_NOSNIFF = True

    # Persistent connections
    # https://docs.djangoproject.com/en/2.2/ref/databases/#general-notes

    # CONN_MAX_AGE = None


class Testing(ProjectDefault):
    """The testing settings."""

    # Debug
    # https://docs.djangoproject.com/en/3.0/ref/settings/#debug

    DEBUG = False

    # Email URL
    # https://django-configurations.readthedocs.io/en/stable/values/

    EMAIL = values.EmailURLValue("dummy://", environ=False)

    STATICFILES_STORAGE = "django.contrib.staticfiles.storage.StaticFilesStorage"
